basePath: /
definitions:
  advert_api.AdvertRequest:
    properties:
      href:
        description: 跳转链接
        type: string
      images:
        description: 图片
        type: string
      is_show:
        description: 是否展示
        type: boolean
      title:
        description: 显示的标题
        type: string
    required:
    - href
    - images
    - title
    type: object
  article_api.ArticleIDTitleListResponse:
    properties:
      label:
        type: string
      value:
        type: string
    type: object
  article_api.ArticleRequest:
    properties:
      abstract:
        description: 文章简介
        type: string
      banner_id:
        description: 文章封面id
        type: integer
      category:
        description: 文章分类
        type: string
      content:
        description: 文章内容
        type: string
      link:
        description: 原文链接
        type: string
      source:
        description: 文章来源
        type: string
      tags:
        description: 文章标签
        items:
          type: string
        type: array
      title:
        description: 文章标题
        type: string
    required:
    - content
    - title
    type: object
  article_api.ArticleUpdateRequest:
    properties:
      abstract:
        description: 文章简介
        type: string
      banner_id:
        description: 文章封面id
        type: integer
      category:
        description: 文章分类
        type: string
      content:
        description: 文章内容
        type: string
      id:
        type: string
      link:
        description: 原文链接
        type: string
      source:
        description: 文章来源
        type: string
      tags:
        description: 文章标签
        items:
          type: string
        type: array
      title:
        description: 文章标题
        type: string
    type: object
  article_api.CalendarResponse:
    properties:
      count:
        type: integer
      date:
        type: string
    type: object
  article_api.CategoryResponse:
    properties:
      label:
        type: string
      value:
        type: string
    type: object
  article_api.IDListRequest:
    properties:
      id_list:
        items:
          type: string
        type: array
    type: object
  chat_api.GroupRequest:
    properties:
      content:
        description: 聊天的内容
        type: string
      msg_type:
        description: 聊天类型
        type: integer
    type: object
  comment_api.CommentRequest:
    properties:
      article_id:
        type: string
      content:
        type: string
      parent_comment_id:
        description: 父评论id
        type: integer
    required:
    - article_id
    - content
    type: object
  config.ModelOption:
    properties:
      disabled:
        type: boolean
      label:
        type: string
      value:
        type: string
    type: object
  config.SiteInfo:
    properties:
      addr:
        type: string
      bei_an:
        type: string
      bilibili_url:
        type: string
      created_at:
        type: string
      email:
        type: string
      gitee_url:
        type: string
      github_url:
        type: string
      job:
        type: string
      name:
        type: string
      qq_image:
        type: string
      slogan:
        type: string
      slogan_en:
        type: string
      title:
        type: string
      version:
        type: string
      web:
        type: string
      wechat_image:
        type: string
    type: object
  ctype.ImageType:
    enum:
    - 1
    - 2
    type: integer
    x-enum-comments:
      Local: 本地
      QiNiu: 七牛云
    x-enum-varnames:
    - Local
    - QiNiu
  ctype.Role:
    enum:
    - 1
    - 2
    - 3
    - 4
    type: integer
    x-enum-comments:
      PermissionAdmin: 管理员
      PermissionDisableUser: 被禁用的用户
      PermissionUser: 普通登录人
      PermissionVisitor: 游客
    x-enum-varnames:
    - PermissionAdmin
    - PermissionUser
    - PermissionVisitor
    - PermissionDisableUser
  ctype.SignStatus:
    enum:
    - 1
    - 2
    - 3
    type: integer
    x-enum-comments:
      SignEmail: 邮箱
      SignGitee: gitee
      SignQQ: QQ
    x-enum-varnames:
    - SignQQ
    - SignGitee
    - SignEmail
  data_api.DataSumResponse:
    properties:
      article_count:
        type: integer
      chat_group_count:
        type: integer
      flow_count:
        type: integer
      message_count:
        type: integer
      now_login_count:
        type: integer
      now_sign_count:
        type: integer
      user_count:
        type: integer
    type: object
  data_api.DateCountResponse:
    properties:
      date_list:
        items:
          type: string
        type: array
      login_data:
        items:
          type: integer
        type: array
      sign_data:
        items:
          type: integer
        type: array
    type: object
  feedback_api.FeedBackCreate:
    properties:
      content:
        type: string
      email:
        type: string
    required:
    - content
    - email
    type: object
  gaode_api.WeatherInfoResponse:
    properties:
      adcode:
        type: string
      city:
        type: string
      humidity:
        type: string
      humidity_float:
        type: string
      province:
        type: string
      reporttime:
        type: string
      temperature:
        type: string
      temperature_float:
        type: string
      weather:
        type: string
      winddirection:
        type: string
      windpower:
        type: string
    type: object
  gvb_server_plugins_log_stash_v2.Level:
    enum:
    - 1
    - 2
    - 3
    type: integer
    x-enum-varnames:
    - Info
    - Warning
    - Error
  images_api.ImageResponse:
    properties:
      id:
        type: integer
      name:
        description: 图片名称
        type: string
      path:
        description: 图片路径
        type: string
    type: object
  images_api.ImageUpdateRequest:
    properties:
      id:
        type: integer
      name:
        type: string
    required:
    - id
    - name
    type: object
  log_stash.LogType:
    enum:
    - 1
    - 2
    - 3
    type: integer
    x-enum-varnames:
    - LoginType
    - ActionType
    - RuntimeType
  log_v2_api.LogRemoveRequest:
    properties:
      endTime:
        description: 年月日格式的结束时间
        type: string
      id_list:
        description: 可以传id列表删除
        items:
          type: integer
        type: array
      ip:
        description: 根据用户ip删除
        type: string
      startTime:
        description: 年月日格式的开始时间
        type: string
      userID:
        description: 根据用户删除日志
        type: integer
    type: object
  menu_api.Banner:
    properties:
      id:
        type: integer
      path:
        type: string
    type: object
  menu_api.ImageSort:
    properties:
      image_id:
        type: integer
      sort:
        type: integer
    type: object
  menu_api.MenuNameResponse:
    properties:
      id:
        type: integer
      path:
        type: string
      title:
        type: string
    type: object
  menu_api.MenuRequest:
    properties:
      abstract:
        items:
          type: string
        type: array
      abstract_time:
        description: 切换的时间，单位秒
        type: integer
      banner_time:
        description: 切换的时间，单位秒
        type: integer
      image_sort_list:
        description: 具体图片的顺序
        items:
          $ref: '#/definitions/menu_api.ImageSort'
        type: array
      path:
        type: string
      slogan:
        type: string
      sort:
        description: 菜单的序号
        type: integer
      title:
        type: string
    required:
    - path
    - title
    type: object
  menu_api.MenuResponse:
    properties:
      abstract:
        description: 简介
        items:
          type: string
        type: array
      abstract_time:
        description: 简介的切换时间
        type: integer
      banner_time:
        description: 菜单图片的切换时间 为 0 表示不切换
        type: integer
      banners:
        items:
          $ref: '#/definitions/menu_api.Banner'
        type: array
      created_at:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: integer
      path:
        description: 路径
        type: string
      slogan:
        description: slogan
        type: string
      sort:
        description: 菜单的顺序
        type: integer
      title:
        description: 标题
        type: string
    type: object
  message_api.Message:
    properties:
      content:
        description: 消息内容
        type: string
      created_at:
        description: 最新的消息时间
        type: string
      message_count:
        description: 消息条数
        type: integer
      rev_user_avatar:
        type: string
      rev_user_id:
        description: 接收人id
        type: integer
      rev_user_nick_name:
        type: string
      send_user_avatar:
        type: string
      send_user_id:
        description: 发送人id
        type: integer
      send_user_nick_name:
        type: string
    type: object
  message_api.MessageRecordRequest:
    properties:
      user_id:
        type: integer
    required:
    - user_id
    type: object
  message_api.MessageRequest:
    properties:
      content:
        description: 消息内容
        type: string
      rev_user_id:
        description: 接收人id
        type: integer
    required:
    - content
    - rev_user_id
    type: object
  models.ArticleModel:
    properties:
      abstract:
        description: 文章简介
        type: string
      banner_id:
        description: 文章封面id
        type: integer
      banner_url:
        description: 文章封面
        type: string
      category:
        description: 文章分类
        type: string
      collects_count:
        description: 收藏量
        type: integer
      comment_count:
        description: 评论量
        type: integer
      content:
        description: 文章内容
        type: string
      created_at:
        description: 创建时间
        type: string
      digg_count:
        description: 点赞量
        type: integer
      id:
        description: es的id
        type: string
      keyword:
        description: 关键字
        type: string
      link:
        description: 原文链接
        type: string
      look_count:
        description: 浏览量
        type: integer
      source:
        description: 文章来源
        type: string
      tags:
        description: 文章标签
        items:
          type: string
        type: array
      title:
        description: 文章标题
        type: string
      updated_at:
        description: 更新时间
        type: string
      user_avatar:
        description: 用户头像
        type: string
      user_id:
        description: 用户id
        type: integer
      user_nick_name:
        description: 用户昵称
        type: string
    type: object
  models.BannerModel:
    properties:
      created_at:
        description: 创建时间
        type: string
      hash:
        description: 图片的hash值，用于判断重复图片
        type: string
      id:
        description: 主键ID
        type: integer
      image_type:
        allOf:
        - $ref: '#/definitions/ctype.ImageType'
        description: 图片的类型， 本地还是七牛
      name:
        description: 图片名称
        type: string
      path:
        description: 图片路径
        type: string
    type: object
  models.CommentModel:
    properties:
      article_id:
        description: 文章id
        type: string
      comment_count:
        description: 子评论数
        type: integer
      comment_model:
        allOf:
        - $ref: '#/definitions/models.CommentModel'
        description: 父级评论
      content:
        description: 评论内容
        type: string
      created_at:
        description: 创建时间
        type: string
      digg_count:
        description: 点赞数
        type: integer
      id:
        description: 主键ID
        type: integer
      parent_comment_id:
        description: 父评论id
        type: integer
      sub_comments:
        description: 子评论列表
        items:
          $ref: '#/definitions/models.CommentModel'
        type: array
      user:
        allOf:
        - $ref: '#/definitions/models.UserModel'
        description: 关联的用户
      user_id:
        description: 评论的用户
        type: integer
    type: object
  models.ESIDListRequest:
    properties:
      id_list:
        items:
          type: string
        type: array
    required:
    - id_list
    type: object
  models.ESIDRequest:
    properties:
      id:
        type: string
    type: object
  models.MessageModel:
    properties:
      content:
        description: 消息内容
        type: string
      created_at:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: integer
      is_read:
        description: 接收方是否查看
        type: boolean
      rev_user_avatar:
        type: string
      rev_user_id:
        description: 接收人id
        type: integer
      rev_user_nick_name:
        type: string
      send_user_avatar:
        type: string
      send_user_id:
        description: 发送人id
        type: integer
      send_user_nick_name:
        type: string
    type: object
  models.RemoveRequest:
    properties:
      id_list:
        items:
          type: integer
        type: array
    type: object
  models.UserModel:
    properties:
      addr:
        description: 地址
        type: string
      avatar:
        description: 头像
        type: string
      created_at:
        description: 创建时间
        type: string
      email:
        description: 邮箱
        type: string
      id:
        description: 主键ID
        type: integer
      integral:
        description: 我的积分
        type: integer
      ip:
        description: ip地址
        type: string
      link:
        description: 我的链接地址
        type: string
      nick_name:
        description: 昵称
        type: string
      role:
        allOf:
        - $ref: '#/definitions/ctype.Role'
        description: 权限  1 管理员  2 普通用户  3 游客
      scope:
        description: 我的积分
        type: integer
      sign:
        description: 我的签名
        type: string
      sign_status:
        allOf:
        - $ref: '#/definitions/ctype.SignStatus'
        description: 注册来源
      tel:
        description: 手机号
        type: string
      token:
        description: 其他平台的唯一id
        type: string
      user_name:
        description: 用户名
        type: string
    type: object
  new_api.params:
    properties:
      id:
        type: string
      size:
        type: integer
    type: object
  res.ListResponse:
    properties:
      count:
        type: integer
      list: {}
    type: object
  res.Response:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
  tag_api.TagRequest:
    properties:
      title:
        description: 显示的标题
        type: string
    required:
    - title
    type: object
  tag_api.TagResponse:
    properties:
      label:
        type: string
      value:
        type: string
    type: object
  user_api.BindEmailRequest:
    properties:
      code:
        type: string
      email:
        type: string
      password:
        type: string
    required:
    - email
    type: object
  user_api.EmailLoginRequest:
    properties:
      password:
        type: string
      user_name:
        type: string
    required:
    - password
    - user_name
    type: object
  user_api.UpdatePasswordRequest:
    properties:
      old_pwd:
        description: 旧密码
        type: string
      pwd:
        description: 新密码
        type: string
    required:
    - old_pwd
    - pwd
    type: object
  user_api.UserCreateRequest:
    properties:
      nick_name:
        description: 昵称
        type: string
      password:
        description: 密码
        type: string
      role:
        allOf:
        - $ref: '#/definitions/ctype.Role'
        description: 权限  1 管理员  2 普通用户  3 游客
      user_name:
        description: 用户名
        type: string
    required:
    - nick_name
    - password
    - role
    - user_name
    type: object
  user_api.UserRole:
    properties:
      nick_name:
        description: 防止用户昵称非法，管理员有能力修改
        type: string
      role:
        allOf:
        - $ref: '#/definitions/ctype.Role'
        enum:
        - 1
        - 2
        - 3
        - 4
      user_id:
        type: integer
    required:
    - role
    - user_id
    type: object
  user_api.UserUpdateNicknameRequest:
    properties:
      avatar:
        type: string
      link:
        type: string
      nick_name:
        type: string
      sign:
        type: string
    type: object
host: 127.0.0.1:8080
info:
  contact: {}
  description: gvb_server API文档
  title: gvb_server API文档
  version: "1.0"
paths:
  /api/adverts:
    delete:
      description: 批量删除广告
      parameters:
      - description: 广告id列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.RemoveRequest'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 批量删除广告
      tags:
      - 广告管理
    get:
      description: 广告列表
      parameters:
      - in: query
        name: key
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.ListResponse'
              type: object
      summary: 广告列表
      tags:
      - 广告管理
    post:
      description: 创建广告
      parameters:
      - description: 表示多个参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/advert_api.AdvertRequest'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 创建广告
      tags:
      - 广告管理
  /api/adverts/{id}:
    put:
      description: 更新广告
      parameters:
      - description: 广告的一些参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/advert_api.AdvertRequest'
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 更新广告
      tags:
      - 广告管理
  /api/article_id_title:
    get:
      description: 文章id-title列表
      parameters:
      - description: token
        in: header
        name: token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/article_api.ArticleIDTitleListResponse'
                  type: array
              type: object
      summary: 文章id-title列表
      tags:
      - 文章管理
  /api/articles:
    delete:
      description: 删除文章
      parameters:
      - description: 表示多个参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/article_api.IDListRequest'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 删除文章
      tags:
      - 文章管理
    get:
      description: 文章列表
      parameters:
      - in: query
        name: category
        type: string
      - description: 发布时间搜索
        in: query
        name: date
        type: string
      - description: 根据这个参数判断是否显示我收藏的文章列表
        in: query
        name: is_user
        type: boolean
      - in: query
        name: key
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: sort
        type: string
      - in: query
        name: tag
        type: string
      - description: token
        in: header
        name: token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.ListResponse'
              type: object
      summary: 文章列表
      tags:
      - 文章管理
    post:
      description: 发布文章
      parameters:
      - description: 表示多个参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/article_api.ArticleRequest'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 发布文章
      tags:
      - 文章管理
    put:
      description: 文章更新
      parameters:
      - description: 传什么参数更新什么，不传不更
        in: body
        name: data
        schema:
          $ref: '#/definitions/article_api.ArticleUpdateRequest'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 文章更新
      tags:
      - 文章管理
  /api/articles/{id}:
    get:
      description: 文章详情
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.ArticleModel'
              type: object
      summary: 文章详情
      tags:
      - 文章管理
  /api/articles/calendar:
    get:
      description: 文章日历
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/article_api.CalendarResponse'
                  type: array
              type: object
      summary: 文章日历
      tags:
      - 文章管理
  /api/articles/collects:
    delete:
      description: 用户取消收藏文章
      parameters:
      - description: 表示多个参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.ESIDListRequest'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 用户取消收藏文章
      tags:
      - 文章管理
    get:
      description: 用户收藏的文章列表
      parameters:
      - in: query
        name: key
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: sort
        type: string
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.ListResponse'
              type: object
      summary: 用户收藏的文章列表
      tags:
      - 文章管理
    post:
      description: 用户收藏文章，或取消收藏
      parameters:
      - description: 表示多个参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.ESIDRequest'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 用户收藏文章，或取消收藏
      tags:
      - 文章管理
  /api/articles/content/{id}:
    get:
      description: 获取文章正文
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 获取文章正文
      tags:
      - 文章管理
  /api/articles/digg:
    post:
      description: 文章点赞
      parameters:
      - description: 表示多个参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.ESIDRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 文章点赞
      tags:
      - 文章管理
  /api/articles/recommend:
    get:
      description: 推荐文章列表
      parameters:
      - in: query
        name: category
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.ListResponse'
              type: object
      summary: 推荐文章列表
      tags:
      - 文章管理
  /api/articles/tags:
    get:
      description: 标签文章列表
      parameters:
      - in: query
        name: key
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.ListResponse'
              type: object
      summary: 标签文章列表
      tags:
      - 文章管理
  /api/articles/text:
    get:
      description: 全文搜索列表
      parameters:
      - in: query
        name: key
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.ListResponse'
              type: object
      summary: 全文搜索列表
      tags:
      - 文章管理
  /api/big_model/usable:
    get:
      description: 可用的大模型列表接口
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/config.ModelOption'
                  type: array
              type: object
      summary: 可用的大模型列表接口
      tags:
      - 大模型管理
  /api/categorys:
    get:
      description: 文章分类列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/article_api.CategoryResponse'
                  type: array
              type: object
      summary: 文章分类列表
      tags:
      - 文章管理
  /api/chat_groups:
    get:
      description: 群聊接口
      parameters:
      - description: 表示多个参数
        in: body
        name: data
        schema:
          $ref: '#/definitions/chat_api.GroupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 群聊接口 websocket
      tags:
      - 聊天管理
  /api/chat_groups_records:
    delete:
      description: 删除群聊的聊天记录
      parameters:
      - description: 表示多个参数
        in: body
        name: data
        schema:
          $ref: '#/definitions/models.RemoveRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 删除群聊的聊天记录
      tags:
      - 聊天管理
    get:
      description: 群聊聊天记录
      parameters:
      - in: query
        name: key
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.ListResponse'
              type: object
      summary: 群聊聊天记录
      tags:
      - 聊天管理
  /api/comments:
    get:
      description: 评论列表
      parameters:
      - in: query
        name: key
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.ListResponse'
              type: object
      summary: 评论列表
      tags:
      - 评论管理
    post:
      description: 发布评论
      parameters:
      - description: 表示多个参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/comment_api.CommentRequest'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 发布评论
      tags:
      - 评论管理
  /api/comments/{id}:
    delete:
      description: 删除评论
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 删除评论
      tags:
      - 评论管理
    get:
      description: 文章下的评论列表
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.CommentModel'
                  type: array
              type: object
      summary: 文章下的评论列表
      tags:
      - 评论管理
  /api/comments/articles:
    get:
      description: 有评论的文章列表
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - in: query
        name: key
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.ListResponse'
              type: object
      summary: 有评论的文章列表
      tags:
      - 评论管理
  /api/comments/digg/{id}:
    get:
      description: 评论点赞
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 评论点赞
      tags:
      - 评论管理
  /api/data_login:
    get:
      description: 七日登录，注册数据
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/data_api.DateCountResponse'
                  type: array
              type: object
      summary: 七日登录，注册数据
      tags:
      - 数据管理
  /api/data_sum:
    get:
      description: 求和数据
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/data_api.DataSumResponse'
                  type: array
              type: object
      summary: 求和数据
      tags:
      - 数据管理
  /api/email_login:
    post:
      description: 邮箱登录，返回token，用户信息需要从token中解码
      parameters:
      - description: 查询参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user_api.EmailLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 邮箱登录
      tags:
      - 用户管理
  /api/feedback:
    delete:
      description: 删除反馈
      parameters:
      - description: 表示多个参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.RemoveRequest'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 删除反馈
      tags:
      - 反馈管理
    get:
      description: 反馈列表
      parameters:
      - in: query
        name: key
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.ListResponse'
              type: object
      summary: 反馈列表
      tags:
      - 反馈管理
    post:
      description: 发布反馈
      parameters:
      - description: 参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/feedback_api.FeedBackCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 发布反馈
      tags:
      - 反馈管理
  /api/gaode/weather:
    get:
      description: 获取实时天气
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/gaode_api.WeatherInfoResponse'
              type: object
      summary: 获取实时天气
      tags:
      - 第三方api管理
  /api/image:
    post:
      consumes:
      - multipart/form-data
      description: 上传单个图片，返回图片的url
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: 文件上传
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 上传单个图片，返回图片的url
      tags:
      - 图片管理
  /api/image_names:
    get:
      description: 图片名称列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/images_api.ImageResponse'
                  type: array
              type: object
      summary: 图片名称列表
      tags:
      - 图片管理
  /api/images:
    delete:
      description: 删除图片
      parameters:
      - description: 表示多个参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.RemoveRequest'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 删除图片
      tags:
      - 图片管理
    get:
      description: 图片列表
      parameters:
      - in: query
        name: key
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.ListResponse'
              type: object
      summary: 图片列表
      tags:
      - 图片管理
    post:
      consumes:
      - multipart/form-data
      description: 上传多个图片，返回图片的url
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: 文件上传
        in: formData
        name: images
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 上传多个图片，返回图片的url
      tags:
      - 图片管理
    put:
      description: 图片更新
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: 表示多个参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/images_api.ImageUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 图片更新
      tags:
      - 图片管理
  /api/login:
    post:
      description: qq登录，返回token，用户信息需要从token中解码
      parameters:
      - description: qq登录的code
        in: query
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: qq登录
      tags:
      - 用户管理
  /api/logout:
    post:
      description: 用户注销
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 用户注销
      tags:
      - 用户管理
  /api/logs/v2:
    delete:
      description: 删除日志
      parameters:
      - description: 参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/log_v2_api.LogRemoveRequest'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 删除日志
      tags:
      - 日志管理V2
    get:
      description: 日志列表
      parameters:
      - description: 感觉地址查询
        in: query
        name: addr
        type: string
      - description: 查某一天的，格式是年月日
        in: query
        name: date
        type: string
      - description: 根据ip查询
        in: query
        name: ip
        type: string
      - in: query
        name: key
        type: string
      - description: 日志查询的等级
        enum:
        - 1
        - 2
        - 3
        in: query
        name: level
        type: integer
        x-enum-varnames:
        - Info
        - Warning
        - Error
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: sort
        type: string
      - description: 登录状态查询  true  成功  false 失败
        in: query
        name: status
        type: boolean
      - description: 日志的类型   1 登录日志  2 操作日志  3 运行日志
        enum:
        - 1
        - 2
        - 3
        in: query
        name: type
        type: integer
        x-enum-varnames:
        - LoginType
        - ActionType
        - RuntimeType
      - description: 根据用户id查询
        in: query
        name: userID
        type: integer
      - description: 查用户名
        in: query
        name: userName
        type: string
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.ListResponse'
              type: object
      summary: 日志列表
      tags:
      - 日志管理V2
  /api/logs/v2/read:
    get:
      description: |-
        日志读取
        1. 前端判断这个日志的读取状态，未读就去请求这个接口，让这个日志变成已读的
        2. 如果是已读状态，就不需要调这个接口了
      parameters:
      - in: query
        name: id
        type: integer
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 日志读取
      tags:
      - 日志管理V2
  /api/menu_names:
    get:
      description: 菜单名称列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/menu_api.MenuNameResponse'
                  type: array
              type: object
      summary: 菜单名称列表
      tags:
      - 菜单管理
  /api/menus:
    delete:
      description: 删除菜单
      parameters:
      - description: 查询参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.RemoveRequest'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 删除菜单
      tags:
      - 菜单管理
    get:
      description: 菜单列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.ListResponse'
              type: object
      summary: 菜单列表
      tags:
      - 菜单管理
    post:
      description: 发布菜单
      parameters:
      - description: 查询参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/menu_api.MenuRequest'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 发布菜单
      tags:
      - 菜单管理
  /api/menus/{id}:
    get:
      description: 菜单详情
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/menu_api.MenuResponse'
              type: object
      summary: 菜单详情
      tags:
      - 菜单管理
    put:
      description: 更新菜单
      parameters:
      - description: 查询参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/menu_api.MenuRequest'
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 更新菜单
      tags:
      - 菜单管理
  /api/menus/detail:
    get:
      description: 菜单详情,根据路径查
      parameters:
      - in: query
        name: path
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/menu_api.MenuResponse'
              type: object
      summary: 菜单详情,根据路径查
      tags:
      - 菜单管理
  /api/message_users:
    delete:
      description: 删除用户的消息记录
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: 查询参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.RemoveRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 删除用户的消息记录
      tags:
      - 消息管理
    get:
      description: 有消息的用户列表
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - in: query
        name: key
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: nickName
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.ListResponse'
              type: object
      summary: 有消息的用户列表
      tags:
      - 消息管理
  /api/message_users/me:
    get:
      description: 我与其他用户的聊天列表
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.ListResponse'
              type: object
      summary: 我与其他用户的聊天列表
      tags:
      - 消息管理
  /api/message_users/record:
    get:
      description: 两个用户之间的聊天记录
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - in: query
        name: key
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: revUserID
        required: true
        type: integer
      - in: query
        name: sendUserID
        required: true
        type: integer
      - in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.ListResponse'
              type: object
      summary: 两个用户之间的聊天记录
      tags:
      - 消息管理
  /api/message_users/record/me:
    get:
      description: 我与某个用户的聊天列表
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - in: query
        name: key
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: sort
        type: string
      - in: query
        name: userID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.ListResponse'
              type: object
      summary: 我与某个用户的聊天列表
      tags:
      - 消息管理
  /api/message_users/user:
    get:
      description: 某个用户的聊天列表
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - in: query
        name: userID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.ListResponse'
              type: object
      summary: 某个用户的聊天列表
      tags:
      - 消息管理
  /api/messages:
    get:
      description: 用户与其他人的消息列表
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/message_api.Message'
                  type: array
              type: object
      summary: 用户与其他人的消息列表
      tags:
      - 消息管理
    post:
      description: 发布消息
      parameters:
      - description: 查询参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/message_api.MessageRequest'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 发布消息
      tags:
      - 消息管理
  /api/messages_all:
    get:
      description: 消息列表
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - in: query
        name: key
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.ListResponse'
              type: object
      summary: 消息列表
      tags:
      - 消息管理
  /api/messages_record:
    post:
      description: 用户的消息记录
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: 查询参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/message_api.MessageRecordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.MessageModel'
                  type: array
              type: object
      summary: 用户的消息记录
      tags:
      - 消息管理
  /api/news:
    post:
      description: 新闻列表
      parameters:
      - description: 新闻参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/new_api.params'
      - description: version
        in: header
        name: version
        required: true
        type: string
      - description: User-Agent
        in: header
        name: User-Agent
        required: true
        type: string
      - description: signaturekey
        in: header
        name: signaturekey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  items: {}
                  type: array
              type: object
      summary: 新闻列表
      tags:
      - 新闻管理
  /api/qq_login_path:
    get:
      description: 获取qq登录的跳转链接,data就是qq的跳转地址
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 获取qq登录的跳转链接
      tags:
      - 用户管理
  /api/settings/{name}:
    get:
      description: 显示某一项的配置信息  site email qq qiniu jwt chat_group
      parameters:
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 显示某一项的配置信息
      tags:
      - 系统管理
    put:
      description: 修改某一项的配置信息
      parameters:
      - description: name
        in: path
        name: name
        required: true
        type: integer
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 修改某一项的配置信息
      tags:
      - 系统管理
  /api/settings/site:
    get:
      description: 显示网站信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/config.SiteInfo'
              type: object
      summary: 显示网站信息
      tags:
      - 系统管理
    put:
      description: 编辑网站信息
      parameters:
      - description: 编辑网站信息的参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/config.SiteInfo'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/config.SiteInfo'
              type: object
      summary: 编辑网站信息
      tags:
      - 系统管理
  /api/tag_names:
    get:
      description: 标签名称列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/tag_api.TagResponse'
                  type: array
              type: object
      summary: 标签名称列表
      tags:
      - 标签管理
  /api/tags:
    delete:
      description: 标签删除
      parameters:
      - description: 查询参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.RemoveRequest'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 标签删除
      tags:
      - 标签管理
    get:
      description: 标签列表
      parameters:
      - in: query
        name: key
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.ListResponse'
              type: object
      summary: 标签列表
      tags:
      - 标签管理
    post:
      description: 发布标签
      parameters:
      - description: 查询参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tag_api.TagRequest'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 发布标签
      tags:
      - 标签管理
  /api/tags/{id}:
    put:
      description: 更新标签
      parameters:
      - description: 查询参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tag_api.TagRequest'
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 更新标签
      tags:
      - 标签管理
  /api/user_bind_email:
    post:
      description: 用户绑定邮箱
      parameters:
      - description: 查询参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user_api.BindEmailRequest'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 用户绑定邮箱
      tags:
      - 用户管理
  /api/user_bind_email_redis:
    post:
      description: 用户绑定邮箱
      parameters:
      - description: 查询参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user_api.BindEmailRequest'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 用户绑定邮箱
      tags:
      - 用户管理
  /api/user_info:
    get:
      description: 用户信息
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.UserModel'
              type: object
      summary: 用户信息
      tags:
      - 用户管理
    put:
      description: 修改当前登录人的昵称，签名，链接
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: 昵称，签名，链接
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user_api.UserUpdateNicknameRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 修改当前登录人的昵称，签名，链接
      tags:
      - 用户管理
  /api/user_password:
    put:
      description: 修改登录人的密码
      parameters:
      - description: 查询参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user_api.UpdatePasswordRequest'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 修改登录人的密码
      tags:
      - 用户管理
  /api/user_role:
    put:
      description: 用户权限变更
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: 查询参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user_api.UserRole'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 用户权限变更
      tags:
      - 用户管理
  /api/users:
    delete:
      description: 删除用户
      parameters:
      - description: 查询参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.RemoveRequest'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 删除用户
      tags:
      - 用户管理
    get:
      description: 用户列表
      parameters:
      - in: query
        name: key
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: sort
        type: string
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/res.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.ListResponse'
              type: object
      summary: 用户列表
      tags:
      - 用户管理
    post:
      description: 创建用户
      parameters:
      - description: 查询参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user_api.UserCreateRequest'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
      summary: 创建用户
      tags:
      - 用户管理
swagger: "2.0"
